{"version":3,"file":"static/js/701.ca68e7d5.chunk.js","mappings":"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","sources":["pages/index.tsx"],"sourcesContent":["import { ClearAllRounded, Settings } from \"@mui/icons-material\";\nimport { LoadingButton } from \"@mui/lab\";\nimport {\n  Box,\n  Button,\n  Grid,\n  Paper,\n  Stack,\n  TextField,\n  Typography,\n} from \"@mui/material\";\nimport axios from \"axios\";\nimport LoadingScreen from \"components/LoadingScreen\";\nimport React, { useState } from \"react\";\nimport { toast } from \"react-toastify\";\n\nconst Home: React.FC = () => {\n  const [loading, setLoading] = useState(false);\n  const [result, setResult] = useState(null);\n  const [data, setData] = useState({\n    Sex: 1,\n    Length: 0.36,\n    Diameter: 0.285,\n    Height: 0.105,\n    \"Whole weight\": 0.2415,\n    \"Shucked weight\": 0.0915,\n    \"Viscera weight\": 0.057,\n    \"Shell weight\": 0.075,\n  });\n  const onChangeDataHandler = (field: string, value: string) => {\n    setData({ ...data, [field]: value });\n  };\n  const predictHandler = async () => {\n    setLoading(true);\n    try {\n      const res = await axios.post(\"/predict-age\", data);\n      setResult(res.data.age);\n    } catch (error) {\n      toast.error(error.message);\n    }\n    setLoading(false);\n  };\n\n  const clearHandler = () => {\n    setResult(null);\n    setData({\n      Sex: 0,\n      Length: 0,\n      Diameter: 0,\n      Height: 0,\n      \"Whole weight\": 0,\n      \"Shucked weight\": 0,\n      \"Viscera weight\": 0,\n      \"Shell weight\": 0,\n    });\n  };\n\n  return (\n    <Paper\n      elevation={6}\n      sx={{\n        p: 3,\n        maxWidth: \"md\",\n        // width: \"400px\",\n        maxHeight: \"90vh\",\n        overflow: \"auto\",\n        position: \"fixed\",\n        top: \"50%\",\n        left: \"50%\",\n        transform: \"translate(-50%,-50%)\",\n      }}\n    >\n      <Grid container spacing={2}>\n        <Grid item xs={12} md={6}>\n          <Stack\n            sx={{ height: { xs: \"200px\", md: \"100%\" } }}\n            justifyContent={\"center\"}\n            alignItems=\"center\"\n          >\n            <Box\n              component=\"img\"\n              src=\"/favicon/abalone.png\"\n              sx={{ height: \"150px\", objectFit: \"contain\" }}\n            />\n            <Typography\n              variant=\"h3\"\n              sx={{\n                fontWeight: \"bold\",\n                marginTop: \"10px\",\n                textAlign: \"center\",\n                color: loading ? \"gray\" : \"primary.main\",\n              }}\n            >\n              {result || \"- - -\"}\n            </Typography>\n          </Stack>\n        </Grid>\n        <Grid item xs={12} md={6}>\n          <Grid container spacing={2}>\n            <Grid item xs={12}>\n              <Typography align=\"center\" variant=\"h4\">\n                Age prediction of Abalone\n              </Typography>\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                label={\"Sex\"}\n                value={data[\"Sex\"]}\n                onChange={(e) => onChangeDataHandler(\"Sex\", e.target.value)}\n                type=\"number\"\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                label={\"Length\"}\n                value={data[\"Length\"]}\n                onChange={(e) => onChangeDataHandler(\"Length\", e.target.value)}\n                type=\"number\"\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                label={\"Diameter\"}\n                value={data[\"Diameter\"]}\n                onChange={(e) =>\n                  onChangeDataHandler(\"Diameter\", e.target.value)\n                }\n                type=\"number\"\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                label={\"Height\"}\n                value={data[\"Height\"]}\n                onChange={(e) => onChangeDataHandler(\"Height\", e.target.value)}\n                type=\"number\"\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                label={\"Whole weight\"}\n                value={data[\"Whole weight\"]}\n                onChange={(e) =>\n                  onChangeDataHandler(\"Whole weight\", e.target.value)\n                }\n                type=\"number\"\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                label={\"Shucked weight\"}\n                value={data[\"Shucked weight\"]}\n                onChange={(e) =>\n                  onChangeDataHandler(\"Shucked weight\", e.target.value)\n                }\n                type=\"number\"\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                label={\"Viscera weight\"}\n                value={data[\"Viscera weight\"]}\n                onChange={(e) =>\n                  onChangeDataHandler(\"Viscera weight\", e.target.value)\n                }\n                type=\"number\"\n              />\n            </Grid>\n            <Grid item xs={12} md={6}>\n              <TextField\n                fullWidth\n                label={\"Shell weight\"}\n                value={data[\"Shell weight\"]}\n                onChange={(e) =>\n                  onChangeDataHandler(\"Shell weight\", e.target.value)\n                }\n                type=\"number\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <Stack\n                direction=\"row\"\n                alignItems={\"center\"}\n                justifyContent=\"flex-end\"\n                spacing={2}\n              >\n                <Button\n                  variant=\"outlined\"\n                  startIcon={<ClearAllRounded />}\n                  onClick={clearHandler}\n                  color=\"inherit\"\n                >\n                  Clear\n                </Button>\n                <LoadingButton\n                  loading={loading}\n                  onClick={predictHandler}\n                  startIcon={<Settings />}\n                  variant=\"contained\"\n                >\n                  Predict\n                </LoadingButton>\n              </Stack>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Grid>\n    </Paper>\n  );\n};\n\nexport default Home;\n"],"names":["useState","loading","setLoading","result","setResult","Sex","Length","Diameter","Height","data","setData","onChangeDataHandler","field","value","predictHandler","axios","res","age","toast","message","elevation","sx","p","maxWidth","maxHeight","overflow","position","top","left","transform","container","spacing","item","xs","md","height","justifyContent","alignItems","component","src","objectFit","variant","fontWeight","marginTop","textAlign","color","align","fullWidth","label","onChange","e","target","type","direction","startIcon","onClick"],"sourceRoot":""}